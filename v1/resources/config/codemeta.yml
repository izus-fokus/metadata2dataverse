scheme: codemeta20
formatSetting: application/json
description: a minimal metadata schema for science software and code, version 2.0
reference: https://codemeta.github.io/

mapping:
   # map codemeta tsv target keys
   - target_key: codeRepository
   - target_key: codeVersion
     source_key: softwareVersion
     priority: 2
   - target_key: codeVersion
     source_key: version
   - target_key: developmentStatus
   - target_key: programmingLanguage
     source_key: programmingLanguage.name
     priority: 2
   - target_key: programmingLanguage
     source_key: programmingLanguage[*].name
     priority: 2
   - target_key: programmingLanguage
   - target_key: operatingSystem
   - target_key: applicationCategory
   - target_key: applicationSubCategory
   - target_key: softwareHelp
   - target_key: softwareHelp
     source_key: softwareHelp[*].url
   - target_key: buildInstructions
   - target_key: runtimePlatform
   - target_key: targetProduct
     source_key: targetProduct.name
   - target_key: targetProduct
     source_key: targetProduct[*].name
   - target_key: softwareRequirements
     source_key: softwareRequirements.name
     priority: 2
   - target_key: softwareRequirements
     source_key: softwareRequirements[*].name
     priority: 2
   - target_key: softwareRequirements
   - target_key: softwareRequirementsUrl
     source_key: softwareRequirements.url
   - target_key: softwareRequirementsUrl
     source_key: softwareRequirements[*].url
   - target_key: softwareSuggestions   
     source_key: softwareSuggestions.name
   - target_key: softwareSuggestions   
     source_key: softwareSuggestions[*].name
   - target_key: softwareSuggestionsInfoUrl
     source_key: softwareSuggestions.url
   - target_key: softwareSuggestionsUrl
     source_key: softwareSuggestions.codeRepository
   - target_key: softwareSuggestionsUrl
     source_key: softwareSuggestions[*].url

   - target_key: softwareSuggestionsInfoUrl
     source_key: softwareSuggestions[*].codeRepository

   - target_key: permissions
   - target_key: memoryRequirements
   - target_key: processorRequirements
   - target_key: storageRequirements
   - target_key: releaseNotes
   - target_key: contIntegration
   - target_key: issueTracker
     
   # map other codemeta source keys if possible
   - class: DateAdder
     source_key: name
     target_key: dateOfDeposit
     type: addition
   - target_key: relatedDatasets
     source_key: supportingData.url
     # create citation with template feature, e.g.,
     # template: "{{#authors}}{{ authors.familyName }}, {{ authors.givenName }}{{/authors}}; {{name}}; {{ issn }}; {{publisher}}; {{copyright-holder}}; {{date-published}}; {{identifier}}; {{url}}."
   - target_key: authorName
     source_key: ["author[*].familyName", "author[*].givenName"]
     type: merge
     join_symbol: ", "
     priority: 2
   - target_key: authorName
     # for organizations
     source_key: author[*].name
     priority: 2
   - target_key: authorName
     source_key: ["creator[*].familyName", "creator[*].givenName"]
     type: merge
     join_symbol: ", "
   - target_key: authorName
     source_key: creator[*].name
   # this will only work if each author has specified an affiliation
   - target_key: authorAffiliation
     source_key: author[*].affiliation.name
   - target_key: [authorIdentifier, authorIdentifierScheme]
     source_key: author[*].@idElement
     type: addition
     class: IdentifierAdder
   # if text
   - target_key: relatedMaterial
     source_key: citation
   # elif creative work, use template like, e.g. supportingData
   - target_key: relatedMaterial
     source_key: citation[*].name
     priority: 2
   - target_key: [contributorName, contributorType]
     source_key: 
       - "norole#contributor[*].(name,familyName,givenName)"
       - "norole#contributor.(name,familyName,givenName)"
       - "Rights Holder#copyrightHolder[*].(name,familyName,givenName)"
       - "Rights Holder#copyrightHolder.(name,familyName,givenName)"
       - "Editor#editor[*].(familyName,givenName)"
       - "Editor#editor.(familyName,givenName)"
       - "Funder#funder[*].(name,familyName,givenName)"
       - "Funder#funder.(name,familyName,givenName)"
       - "Sponsor#sponsor[*].(name,familyName,givenName)"
       - "Sponsor#sponsor.(name,familyName,givenName)"
     type: addition
     class: RoleNameAdder
   - target_key: productionDate
     source_key: dateCreated
     #type: addition
     #class: DateFormatter
     priority: 2
   - target_key: productionDate
     source_key: copyrightYear
     #type: addition
     #class: DateFormatter
   - target_key: distributionDate
     source_key: datePublished
     #type: addition
     #class: DateFormatter
   - target_key: keywordValue
     source_key: keywords
   # Producer has same problems as author, see above
   - target_key: producerName
     source_key: ["producer[*].familyName", "producer[*].givenName"]
     type: merge
     join_symbol: ", "
     priority: 2
   - target_key: producerName
     source_key: producer[*].name
     priority: 2
   - target_key: producerAffiliation
     source_key: producer[*].affiliation.name
   - target_key: producerURL
     source_key: producer[*].url
   - target_key: producerLogoURL
     source_key: producer[*].logo
     priority: 2
   - target_key: producerLogoURL
     source_key: producer[*].image
   # provider has same problems as author, see above
   - target_key: distributorName
     source_key: ["provider[*].familyName", "provider[*].givenName"]
     type: merge
     join_symbol: ", "
     priority: 2
   - target_key: distributorName
     source_key: provider[*].name
     priority: 2
   - target_key: distributorAffiliation
     source_key: provider[*].affiliation.name
   - target_key: distributorURL
     source_key: provider[*].url
   - target_key: distributorLogoURL
     source_key: provider[*].logo
     priority: 2
   - target_key: distributorLogoURL
     source_key: provider[*].image   
   - target_key: distributorName
     source_key: ["publisher[*].familyName", "publisher[*].givenName"]
     type: merge
     join_symbol: ", "
     priority: 2
   - target_key: distributorName
     source_key: publisher[*].name
     priority: 2
   - target_key: distributorAffiliation
     source_key: publisher[*].affiliation.name
   - target_key: distributorURL
     source_key: publisher[*].url
   - target_key: distributorLogoURL
     source_key: publisher[*].logo
     priority: 2
   - target_key: distributorLogoURL
     source_key: publisher[*].image     
   # todo: rule if isPartOf[*].@type == Dataset, map to relatedDataset, in all other cases to relatedMaterial
   - target_key: relatedMaterial
     source_key: isPartOf[*].name
   - target_key: relatedMaterial
     source_key: isPartOf.name
   - target_key: relatedDatasets
     source_key: hasPart[*].name
   - target_key: relatedDatasets
     source_key: hasPart.name
   - target_key: dsDescriptionValue
     source_key: description
   - target_key: title
     source_key: name
   - target_key: alternativeURL
     source_key: sameAs
   - target_key: relatedMaterial
     source_key: relatedLink
     # to sum all hits mapping to related material, instead of overwriting it
     # todo: priority: "append"     
     # commented out, because results in error, if an author or contributor or maintainer is available without an email address
#   - target_key: datasetContactEmail
#     source_key: maintainer[*].email
#     priority: 3
#   - target_key: datasetContactName
#     source_key: ["maintainer[*].familyName", "maintainer[*].givenName"]
#     type: merge
#     join_symbol: ", "
#     priority: 3
#   - target_key: datasetContactName
#     source_key: maintainer[*].name
#     priority: 3
#   - target_key: datasetContactAffiliation
#     source_key: maintainer[*].affiliation.name
#     priority: 3
#   - target_key: datasetContactEmail
#     source_key: email
#     priority: 2
#   - target_key: datasetContactName
#     source_key: [familyName, givenName]
#     type: merge
#     join_symbol: ", "
#     priority: 2
#   - target_key: datasetContactAffiliation
#     source_key: affiliation.name 
#     priority: 2
#   - target_key: datasetContactEmail
#     source_key: author[0].email
#   - target_key: datasetContactName
#     source_key: ["author[0].familyName", "author[0].givenName"]
#     type: merge
#     join_symbol: ", "
#   - target_key: datasetContactName
#     source_key: author[0].name
#   - target_key: datasetContactAffiliation
#     source_key: author[0].affiliation.name
   - target_key: grantNumberValue
     source_key: funding
   # see examples of https://schema.org/ScholarlyArticle for how to extract good properties; refer also to template feature above (supportingData.url)
   - target_key: publicationCitation
     source_key: referencePublication[*].name
     priority: 2
   - target_key: publicationCitation
     source_key: referencePublication.name   
     priority: 2
   - target_key: publicationCitation
     source_key: referencePublication
